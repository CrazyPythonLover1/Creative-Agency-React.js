[{"C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\App.js":"1","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Navbar\\Navbar.js":"2","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Home.js":"3","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Sliders\\Sliders.js":"4","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\reportWebVitals.js":"5","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Sliders\\Slide\\Slide.js":"6","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\index.js":"7"},{"size":759,"mtime":1606962078560,"results":"8","hashOfConfig":"9"},{"size":1308,"mtime":1607001113013,"results":"10","hashOfConfig":"9"},{"size":465,"mtime":1606998097851,"results":"11","hashOfConfig":"9"},{"size":4996,"mtime":1607018553446,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"9"},{"size":1352,"mtime":1607059168160,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1awd2qx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\App.js",[],["34","35"],"C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Navbar\\Navbar.js",["36","37"],"import React from \"react\";\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = ({navHandleColor}) => {\r\n  console.log(navHandleColor)\r\n  return (\r\n    <div>\r\n      <div className=\"page_portfolio\" >\r\n        <div className=\"portfolio_home__header\">\r\n          <div className=\"logoMain\">\r\n            { navHandleColor===\"black\"? <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/cagencylogo.png\" />:\r\n            <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/slogowhite.png\"/>}\r\n          </div>\r\n          <div className=\"nav\">\r\n            <ul className={navHandleColor}>\r\n              <li className=\"active trigger\">Our work</li>\r\n              <li className=\"trigger\">Our services</li>\r\n              <li className=\"trigger\">About us</li>\r\n              <li className=\"trigger\">Contact us</li>\r\n            </ul>\r\n          </div>\r\n          <div className={`number black ${navHandleColor}`}>0161 345 3464</div>\r\n          <div  className=\"hamburger black trigger\">\r\n            <div className={`hamburger_part  ${navHandleColor}`} ></div>\r\n            <div  className={`hamburger_part  ${navHandleColor}`} ></div>\r\n            <div className={`hamburger_part  ${navHandleColor}`} ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Home.js",["38"],"import React, { useState } from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Sliders from './Sliders/Sliders';\r\n\r\nconst Home = () => {\r\n    \r\n    const [ navHandleColor, setNavHandleColor] = useState(\"black\")\r\n\r\n    const handleColor = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar navHandleColor={navHandleColor} />\r\n            <Sliders setNavHandleColor={setNavHandleColor} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Sliders\\Sliders.js",["39","40"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sliders.scss\";\r\nimport worksData from \"../../../data/works.json\";\r\nimport Slide from \"./Slide/Slide\";\r\n\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\n\r\n\r\nconst Sliders = ({setNavHandleColor}) => {\r\n\r\n  const works = worksData.works;\r\n   const [isRotate, setIsRotate] = useState({})\r\n\r\n  //  console.log(isRotate.startX)\r\n\r\n   const [rotate, setRotate] = useState(0)\r\n   useEffect(() => {\r\n    if (isRotate.diff> 40){\r\n      console.log(isRotate.diff)\r\n      setRotate(40);\r\n      // console.log(rotate)\r\n      \r\n    } else if( isRotate.startX> isRotate.currentX){\r\n      setRotate(-40);\r\n      // console.log(rotate)\r\n    } else{\r\n      setRotate(isRotate.diff)\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setRotate(0)\r\n    }, 700)\r\n\r\n   }, [isRotate.diff])\r\n\r\n\r\n  const activeSlide = document.querySelector('.swiper-slide-active');\r\n  const next = document.querySelector('.swiper-slide-next');\r\n  const prev = document.querySelector('.swiper-slide-prev');\r\n \r\n  if(activeSlide){\r\n    activeSlide.querySelector('.overlay').style.opacity = 1;\r\n  }\r\n  if(next){\r\n    next.querySelector('.overlay').style.opacity = 0;\r\n  }\r\n  if(prev){\r\n    prev.querySelector('.overlay').style.opacity = 0;\r\n  }\r\n  // console.log(activeOverlay)\r\n\r\n \r\n  const [dragging, setDragging] = useState(false)\r\n\r\n  const [individualSlide, setIndividualSlide] = useState(false);\r\n  const [slideItem, setSlideItem] = useState({})\r\n\r\n  const [ slideBg, setSlideBg] = useState(false)\r\n\r\n const handleBtn = (work) => {\r\n  setIndividualSlide(true)\r\n  setSlideItem(work)\r\n  setNavHandleColor(\"white\");\r\n\r\n  setTimeout(() => {\r\n    setSlideBg(true);\r\n  }, 1500)\r\n\r\n  \r\n }\r\n\r\n\r\n\r\n  return (\r\n    <div className={`container  ${individualSlide?\"expand\":\"\"} `}   >\r\n      \r\n    <div id=\"sliders\" className=\"sliders\">\r\n      <div className=\"inner-slider\">\r\n       \r\n      {/* <div style={{opacity:individualSlide?1:0}}> <Navbar/> </div>  */}\r\n        <Swiper \r\n          slidesPerView=\"auto\" \r\n          centeredSlides=\"true\"\r\n          speed={1000}\r\n          initialSlide={1}\r\n          preventInteractionOnTransition={individualSlide?true:false}\r\n          allowSlidePrev={individualSlide?false:true}\r\n          allowSlideNext={individualSlide?false:true}\r\n          // virtualTranslate = {individualSlide?\"true\":\"false\"}\r\n          // touchStartPreventDefault=\"false\"\r\n          \r\n          onSlideChange={() => {\r\n            setDragging(true)\r\n            // drawMouseSpeedDemo()\r\n            console.log(\"slide change\")\r\n            setRotate(20);\r\n          }}\r\n          onTouchMove={(e) => {\r\n            setDragging(!dragging) \r\n            // drawMouseSpeedDemo(e)\r\n            // console.log(e.touches.startX)\r\n            // console.log(\"Touch Move \")\r\n            !individualSlide && setIsRotate({startX:e.touches.startX, currentX:e.touches.currentX, diff:e.touches.diff})\r\n\r\n          } }\r\n          \r\n          onTouchStart={() => {\r\n            setDragging(true) \r\n            // drawMouseSpeedDemo()\r\n            // console.log(\"Touch Start\")\r\n\r\n          } }\r\n          onClick={() => {\r\n            setDragging(true) \r\n            // drawMouseSpeedDemo()\r\n            // console.log(\" Click \")\r\n\r\n          }}\r\n \r\n\r\n          // onSetTranslate={() => {\r\n          //   setDragging(true) \r\n          //   drawMouseSpeedDemo()\r\n          // }}\r\n          // onSliderMove ={ () => setIsRotate( true)}\r\n          // onSlideNextTransitionEnd={ () => setIsRotate( true)}\r\n       \r\n        // style={{display: individualSlide?'none':'block'}}\r\n        >\r\n          {/*  */}\r\n          \r\n          {works.map((work) => (\r\n            <SwiperSlide key={`slider-${work.id}`} style={{transform:`rotateY(${individualSlide?\"\":rotate}deg)  `}}   >\r\n              \r\n              <div id=\"slide\" className=\"slide\"   >\r\n                <div className=\"title\">\r\n                  .0{work.id} <br/>\r\n                  {work.title}\r\n                </div>\r\n                <div className=\"img\" style={{transform: `scaleX(${rotate>20?1:1}) ` }} >\r\n                  <img src={work.src} alt=\"\"   />\r\n\r\n                  <div className=\"overlay\" style={{opacity:activeSlide?1:0 }} >\r\n                    <div className=\"category\"> {work.category} </div>\r\n                    <div className=\"title\"> {work.productTitle} </div>\r\n                    <div className=\"button\" onClick={() => handleBtn(work)}> <span>View case study</span> <ArrowForwardIcon/>\r\n                   \r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                \r\n              </div>\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n\r\n    \r\n\r\n{ slideBg &&   <div>  <Slide slideItem={slideItem}/>  </div> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sliders;\r\n","C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\reportWebVitals.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\components\\Home\\Sliders\\Slide\\Slide.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Anatoly-portfolio\\Creative-Agency-With-React.js\\creative-agency\\src\\index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":11,"column":41,"nodeType":"47","endLine":11,"endColumn":122},{"ruleId":"45","severity":1,"message":"46","line":12,"column":13,"nodeType":"47","endLine":12,"endColumn":92},{"ruleId":"48","severity":1,"message":"49","line":9,"column":11,"nodeType":"50","messageId":"51","endLine":9,"endColumn":22},{"ruleId":"48","severity":1,"message":"52","line":11,"column":8,"nodeType":"50","messageId":"51","endLine":11,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":40,"column":7,"nodeType":"55","endLine":40,"endColumn":22,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'handleColor' is assigned a value but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isRotate.currentX' and 'isRotate.startX'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [isRotate.currentX, isRotate.diff, isRotate.startX]",{"range":"62","text":"63"},[955,970],"[isRotate.currentX, isRotate.diff, isRotate.startX]"]